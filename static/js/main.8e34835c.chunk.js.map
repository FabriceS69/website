{"version":3,"sources":["training/data.ts","theme.tsx","training/item.tsx","training/list.tsx","Home.tsx","About.tsx","Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["level","TRAININGS","name","date","beginner","description","topics","requirements","intermediate","theme","createMuiTheme","palette","primary","light","pink","main","dark","contrastText","secondary","brown","styles","card","width","margin","height","marginTop","media","chip","marginLeft","marginBottom","actions","display","justifyContent","backgroundColor","Theme","withStyles","_ref","training","classes","map","topic","i","react_default","a","createElement","Chip_default","className","key","label","Card_default","CardActionArea_default","CardMedia_default","image","CardContent_default","Typography_default","gutterBottom","variant","component","CardActions_default","Button_default","size","color","cardList","alignItems","flexWrap","trainings","index","item","heading","list","footer","flexDirection","padding","link","textDecoration","href","appBar","toolbar","navButton","react_router_dom","AppBar_default","position","Toolbar_default","to","react_router","path","exact","Home","About","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e34835c.chunk.js","sourcesContent":["// Typescript\r\nenum level {\r\n  beginner = 'Beginner ⭐️',\r\n  intermediate = 'Intermediate ⭐️⭐️',\r\n  advanced = 'Advanced ⭐️⭐️⭐️',\r\n  expert = 'Expert 😈'\r\n}\r\n\r\nexport interface Training {\r\n  name: string\r\n  date: string\r\n  level: level\r\n  description: string\r\n  topics: string[]\r\n  requirements: string[]\r\n}\r\n\r\nexport const TRAININGS: Training[] = [\r\n  {\r\n    name: 'Ethereum',\r\n    date: '',\r\n    level: level.beginner,\r\n    description: `\r\n      Discover what is Ethereum. Create a wallet, exchange Ethers, and interact with smart-contracts.\r\n      No programming skills required.\r\n    `,\r\n    topics: ['Blockchain', 'Consensus', 'Wallet'],\r\n    requirements: []\r\n  },\r\n  {\r\n    name: 'Solidity',\r\n    date: '',\r\n    level: level.beginner,\r\n    description: `\r\n      Create your first smart-contract Ethereum written in Solidity.\r\n      Use the Remix IDE to deploy and interact with it on a testing network.\r\n    `,\r\n    topics: ['Smart-Contracts', 'Solidity', 'Network'],\r\n    requirements: []\r\n  },\r\n  {\r\n    name: 'Dapp',\r\n    date: '',\r\n    level: level.intermediate,\r\n    description: 'Learn Solidity',\r\n    topics: ['Javascript', 'Solidity', 'Testing'],\r\n    requirements: []\r\n  }\r\n]\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport brown from '@material-ui/core/colors/brown';\r\n\r\nconst light = 50;\r\nconst main = 500;\r\nconst dark = 800;\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: pink[light],\r\n      main: pink[main],\r\n      dark: pink[dark],\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: brown[light],\r\n      main: brown[main],\r\n      dark: brown[dark],\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react'\r\nimport { Training } from './data'\r\n// Card\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Chip from '@material-ui/core/Chip'\r\n// Color\r\nimport Theme from '../theme'\r\n\r\n\r\nconst styles = {\r\n  card: {\r\n    width: 345,\r\n    margin: 20,\r\n  },\r\n  description: {\r\n    height: 100,\r\n    marginTop: 10,\r\n  },\r\n  media: {\r\n    height: 100,\r\n  },\r\n  chip: {\r\n    marginLeft: 10,\r\n    marginBottom: 10\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    backgroundColor: Theme.palette.secondary.light\r\n  }\r\n};\r\n\r\nfunction TrainingItem({ training, classes }: { training: Training, classes: any }) {\r\n  const topics = training.topics.map((topic, i) => {\r\n    return <Chip className={classes.chip} key={topic + i} label={topic} />\r\n  })\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSGTVf63Vm3XgOncMVSOy0-jSxdMT8KVJIc8WiWaevuWiPGe0Pm\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            { training.name }\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\">Level: {training.level}</Typography>\r\n          <Typography className={classes.description} component=\"p\">\r\n            { training.description }\r\n          </Typography>\r\n        </CardContent>\r\n        { topics }\r\n      </CardActionArea>\r\n      <CardActions className={classes.actions}>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Discover\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(TrainingItem);\r\n","import React from 'react'\r\nimport { TRAININGS } from './data'\r\nimport TrainingItem from './item'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = {\r\n  cardList: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems : 'center',\r\n    flexWrap: 'wrap' as 'wrap',\r\n  }\r\n}\r\n\r\nfunction TrainingList({ classes }: any) {\r\n  const trainings = TRAININGS.map((training, index) => {\r\n    return <TrainingItem key={index} training={training} />\r\n  })\r\n  return <div className={classes.cardList}>{trainings}</div>\r\n}\r\n\r\nexport default withStyles(styles)(TrainingList);\r\n","import React from 'react';\r\nimport TrainingList from './training/list';\r\nimport './Home.css';\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  heading: {\r\n    margin: 30\r\n  }\r\n}\r\n\r\nfunction Home({ classes }: any) {\r\n  return (\r\n    <main>\r\n      <section className=\"header\">\r\n        <Typography variant=\"h2\" gutterBottom>\r\n          Dapps Nation\r\n        </Typography>\r\n        <Typography variant=\"h5\">\r\n          Blockchain Developers Trainings in Lyon\r\n        </Typography>\r\n        <Button variant=\"contained\" color=\"primary\">Check our trainings</Button>\r\n      </section>\r\n      <section>\r\n        <Typography className={classes.heading} variant=\"h2\" gutterBottom>\r\n          Our Trainings\r\n        </Typography>\r\n        <TrainingList />\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(Home)\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core' \r\n\r\nimport './About.css';\r\n\r\nconst styles = {\r\n}\r\n\r\nfunction About({classes} : any) {\r\n  return <main className='background'>\r\n      <p className=\"mission\"><b>Our mission</b></p>\r\n      <h1 className=\"mission\">\r\n      Dare to innovate by staying always up to date. \r\n      To encourage web developer to dare to innovate.\r\n      To support web developers in mastering new technologies.\r\n      To empower web developers to dare to innovate with cutting edge technologies.\r\n      Train and connect web developers to innovate all together for a better future. \r\n      To shape the future of the web by training and connecting developers.\r\n      Bring training and innovation to every developer.\r\n\r\n      </h1>\r\n      <p className=\"mission\"><b>Our CEO's quote</b></p>\r\n      <h2 className=\"mission\">\r\n      Better commit yourself into a short but very specific training, than try to learn by yourself .......\r\n\r\n      </h2>\r\n\r\n    </main>\r\n}\r\n\r\nexport default withStyles(styles)(About);","import React from 'react'\r\nimport { withStyles } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\n \r\n\r\nconst styles = {\r\n  footer: {\r\n    display : \"flex\",\r\n    flexDirection : 'column' as 'column',\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor : \"darkGrey\",\r\n    color : \"whiteSmoke\",\r\n    padding: 20\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  }\r\n}\r\n\r\nfunction Footer({ classes }: any) {\r\n  return (\r\n    <div className={classes.footer}>\r\n      <p> &copy; 2019 Dappsnation </p>\r\n      <div>\r\n        <Button size=\"small\" color=\"primary\" >\r\n            <a className={classes.link} href=\"https://www.linkedin.com/company/dappsnation/\">Linkedin</a>\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" >        \r\n            <a className={classes.link} href=\"https://medium.com/@grandschtroumpf\">Medium</a>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(Footer)\r\n","import React from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Home from './Home'\nimport About from './About'\nimport Footer from './Footer'\n\nimport theme from './theme'\n\nimport { Link } from 'react-router-dom'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport AppBar from '@material-ui/core/AppBar'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = {\n  appBar: {\n    backgroundColor: 'rgba(200, 200, 200, 0.4)'\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  navButton: {\n    color: 'white',\n    textDecoration: 'none',\n  }\n  \n}\n\nfunction App({ classes }: any) {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Router>\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"inherit\">\n          {/* Nav */}\n          <Toolbar className={classes.toolbar}>\n            <Link to=\"/\">\n              <Button className={classes.navButton}>Dapps Nation</Button>\n            </Link>\n            <Link to=\"/about\">\n              <Button className={classes.navButton}>About</Button>\n            </Link>\n          </Toolbar>\n        </AppBar>\n        {/* sections */}\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/about\" component={About} />\n        {/* Footer */}\n        <Footer />\n      </Router>\n    </MuiThemeProvider>\n  )\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}